#!/usr/bin/env ruby
require 'rubygems'
require 'bundler'
Bundler.setup
require 'hornetseye_v4l2'
require 'hornetseye_xorg'
require 'pry'

include Hornetseye

HIGH = 6.0
LOW = 0.75
input = V4L2Input.new '/dev/video0'
w, h = input.width, input.height
X11Display.show do
  img = input.read_ubyte
  x = img.gauss_gradient 1.4, 0, 0.5
  y = img.gauss_gradient 1.4, 1, 0.5
  norm = Math.hypot x, y
  angle = Math.atan2 y, x
  orientation = ((2 * Math::PI - Math::PI / 8 + angle) * (4 / Math::PI)).to_ubyte % 4
  idx, idy = lazy(w, h) { |i,j| i }, lazy(w, h) { |i,j| j }
  dx, dy = orientation.lut(Sequence[-1, 0, 1, 1]), orientation.lut(Sequence[-1, -1, -1, 0])
  low = norm >= norm.warp(idx + dx, idy + dy).major(norm.warp(idx - dx, idy - dy)).major(LOW)
  high = norm >= HIGH
  comp = low.components
  hist = comp.histogram comp.max + 1, :weight => high.to_int
  edges = low.and comp.lut(hist > 0)
  edges.conditional high.conditional(RGB(255, 255, 0), RGB(255, 0, 0)), img
end
